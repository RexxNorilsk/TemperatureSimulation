#pragma kernel CSMain

RWTexture2D<float4> Result;

RWStructuredBuffer<float> z;
RWStructuredBuffer<float> u;
RWStructuredBuffer<float> v;

int size;
int radiusCenterHeater;
float xCenter;
float yCenter;
float Resolution;
float CenterTemperature;
float pipeSize;
float alpha;
float beta;
float outerLayer;


uint GetPos(int x, int y) {
    return x * size + y;
}

bool CheckCenter(int x, int y, int radius) {
    if (sqrt((x-xCenter)* (x - xCenter) + (y - yCenter)* (y - yCenter)) < radius) {
        return true;
    }
    return false;
}

[numthreads(8, 8, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    int pos = GetPos(id.x, id.y);
    if (CheckCenter(id.x, id.y, pipeSize)) {
        float x = id.x / Resolution;
        float y = id.y / Resolution;
        
        float coms[4] = { -1000, -1000, -1000, -1000 };
        float result = 0;

        if (((int)id.x) - 1 >= 0 && ((int)id.y) >= 0 && ((int)id.y) < size) coms[0] = u[GetPos(((int)id.x) - 1, ((int)id.y))];
        if ((int)id.x + 1 < size && ((int)id.y) >= 0 && ((int)id.y) < size) coms[1] = u[GetPos((int)id.x + 1, ((int)id.y))];
        if (((int)id.y) - 1 >= 0 && (int)id.x >= 0 && (int)id.x < size) coms[2] = u[GetPos((int)id.x, ((int)id.y) - 1)];
        if (((int)id.y) + 1 < size && (int)id.x >= 0 && (int)id.x < size) coms[3] = u[GetPos((int)id.x, ((int)id.y) + 1)];

        for (int k = 0; k < 4; k++)
            if (coms[k] != -1000)
                result += coms[k];

        v[pos] = u[pos];
        z[pos] = alpha * result + beta * v[pos];
        u[pos] = z[pos];

        if (CheckCenter(id.x, id.y, radiusCenterHeater)) {
            u[pos] = CenterTemperature;
            z[pos] = CenterTemperature;
            v[pos] = CenterTemperature;
        }
        Result[id.xy] = float4(u[pos] / CenterTemperature, 0.0, 0.0, 0.0);
    }
    else if (CheckCenter(id.x, id.y, outerLayer)) {
        Result[id.xy] = float4(0.5, 0.5, 0.5, 0.0);
    }
    else {
        Result[id.xy] = float4(1.0, 1.0, 1.0, 0.0);
    }
}

